<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.damselfly.mapper.ContractMapper">
  <resultMap id="BaseResultMap" type="com.damselfly.entity.Contract">
    <id column="contract_id" jdbcType="INTEGER" property="contract_id" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="contract_code" jdbcType="VARCHAR" property="contract_code" />
    <result column="sign_date" jdbcType="DATE" property="signDate" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="state_date" jdbcType="DATE" property="state_date" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="sign_name" jdbcType="VARCHAR" property="signName" />
    <result column="sign_user_id" jdbcType="INTEGER" property="signUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    contract_id, cust_id, title, content, contract_code, sign_date, start_date, end_date, 
    state_date, state, sign_name, sign_user_id
  </sql>
  <select id="selectByExample" parameterType="com.damselfly.entity.ContractCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from security_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from security_contract
    where contract_id = #{contract_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from security_contract
    where contract_id = #{contract_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.damselfly.entity.ContractCriteria">
    delete from security_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.damselfly.entity.Contract">
    <selectKey keyProperty="contract_id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into security_contract (cust_id, title, content, 
      contract_code, sign_date, start_date, 
      end_date, state_date, state, 
      sign_name, sign_user_id)
    values (#{custId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{contract_code,jdbcType=VARCHAR}, #{signDate,jdbcType=DATE}, #{startDate,jdbcType=DATE}, 
      #{endDate,jdbcType=DATE}, #{state_date,jdbcType=DATE}, #{state,jdbcType=INTEGER}, 
      #{signName,jdbcType=VARCHAR}, #{signUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.damselfly.entity.Contract">
    <selectKey keyProperty="contract_id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into security_contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="custId != null">
        cust_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="contract_code != null">
        contract_code,
      </if>
      <if test="signDate != null">
        sign_date,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="state_date != null">
        state_date,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="signName != null">
        sign_name,
      </if>
      <if test="signUserId != null">
        sign_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="contract_code != null">
        #{contract_code,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        #{signDate,jdbcType=DATE},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="state_date != null">
        #{state_date,jdbcType=DATE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="signName != null">
        #{signName,jdbcType=VARCHAR},
      </if>
      <if test="signUserId != null">
        #{signUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.damselfly.entity.ContractCriteria" resultType="java.lang.Integer">
    select count(*) from security_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update security_contract
    <set>
      <if test="record.contract_id != null">
        contract_id = #{record.contract_id,jdbcType=INTEGER},
      </if>
      <if test="record.custId != null">
        cust_id = #{record.custId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.contract_code != null">
        contract_code = #{record.contract_code,jdbcType=VARCHAR},
      </if>
      <if test="record.signDate != null">
        sign_date = #{record.signDate,jdbcType=DATE},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.state_date != null">
        state_date = #{record.state_date,jdbcType=DATE},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.signName != null">
        sign_name = #{record.signName,jdbcType=VARCHAR},
      </if>
      <if test="record.signUserId != null">
        sign_user_id = #{record.signUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update security_contract
    set contract_id = #{record.contract_id,jdbcType=INTEGER},
      cust_id = #{record.custId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      contract_code = #{record.contract_code,jdbcType=VARCHAR},
      sign_date = #{record.signDate,jdbcType=DATE},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      state_date = #{record.state_date,jdbcType=DATE},
      state = #{record.state,jdbcType=INTEGER},
      sign_name = #{record.signName,jdbcType=VARCHAR},
      sign_user_id = #{record.signUserId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.damselfly.entity.Contract">
    update security_contract
    <set>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="contract_code != null">
        contract_code = #{contract_code,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        sign_date = #{signDate,jdbcType=DATE},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="state_date != null">
        state_date = #{state_date,jdbcType=DATE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="signName != null">
        sign_name = #{signName,jdbcType=VARCHAR},
      </if>
      <if test="signUserId != null">
        sign_user_id = #{signUserId,jdbcType=INTEGER},
      </if>
    </set>
    where contract_id = #{contract_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.damselfly.entity.Contract">
    update security_contract
    set cust_id = #{custId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      contract_code = #{contract_code,jdbcType=VARCHAR},
      sign_date = #{signDate,jdbcType=DATE},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      state_date = #{state_date,jdbcType=DATE},
      state = #{state,jdbcType=INTEGER},
      sign_name = #{signName,jdbcType=VARCHAR},
      sign_user_id = #{signUserId,jdbcType=INTEGER}
    where contract_id = #{contract_id,jdbcType=INTEGER}
  </update>


</mapper>