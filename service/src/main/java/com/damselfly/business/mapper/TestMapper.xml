<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.damselfly.business.mapper.TestMapper">
  <resultMap id="BaseResultMap" type="com.damselfly.business.entity.Test">
    <id column="test_id" jdbcType="INTEGER" property="testId" />
    <result column="test_name" jdbcType="VARCHAR" property="testName" />
    <result column="input_date" jdbcType="DATE" property="inputDate" />
    <result column="big_data" jdbcType="VARCHAR" property="bigData" />
    <result column="test_type" jdbcType="INTEGER" property="testType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    test_id, test_name, input_date, big_data, test_type
  </sql>
  <select id="selectByExample" parameterType="com.damselfly.business.entity.TestCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from business_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from business_test
    where test_id = #{testId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from business_test
    where test_id = #{testId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.damselfly.business.entity.TestCriteria">
    delete from business_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.damselfly.business.entity.Test">
    insert into business_test (test_id, test_name, input_date, 
      big_data, test_type)
    values (#{testId,jdbcType=INTEGER}, #{testName,jdbcType=VARCHAR}, #{inputDate,jdbcType=DATE}, 
      #{bigData,jdbcType=VARCHAR}, #{testType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.damselfly.business.entity.Test">
    insert into business_test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testId != null">
        test_id,
      </if>
      <if test="testName != null">
        test_name,
      </if>
      <if test="inputDate != null">
        input_date,
      </if>
      <if test="bigData != null">
        big_data,
      </if>
      <if test="testType != null">
        test_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testId != null">
        #{testId,jdbcType=INTEGER},
      </if>
      <if test="testName != null">
        #{testName,jdbcType=VARCHAR},
      </if>
      <if test="inputDate != null">
        #{inputDate,jdbcType=DATE},
      </if>
      <if test="bigData != null">
        #{bigData,jdbcType=VARCHAR},
      </if>
      <if test="testType != null">
        #{testType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.damselfly.business.entity.TestCriteria" resultType="java.lang.Integer">
    select count(*) from business_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update business_test
    <set>
      <if test="record.testId != null">
        test_id = #{record.testId,jdbcType=INTEGER},
      </if>
      <if test="record.testName != null">
        test_name = #{record.testName,jdbcType=VARCHAR},
      </if>
      <if test="record.inputDate != null">
        input_date = #{record.inputDate,jdbcType=DATE},
      </if>
      <if test="record.bigData != null">
        big_data = #{record.bigData,jdbcType=VARCHAR},
      </if>
      <if test="record.testType != null">
        test_type = #{record.testType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update business_test
    set test_id = #{record.testId,jdbcType=INTEGER},
      test_name = #{record.testName,jdbcType=VARCHAR},
      input_date = #{record.inputDate,jdbcType=DATE},
      big_data = #{record.bigData,jdbcType=VARCHAR},
      test_type = #{record.testType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.damselfly.business.entity.Test">
    update business_test
    <set>
      <if test="testName != null">
        test_name = #{testName,jdbcType=VARCHAR},
      </if>
      <if test="inputDate != null">
        input_date = #{inputDate,jdbcType=DATE},
      </if>
      <if test="bigData != null">
        big_data = #{bigData,jdbcType=VARCHAR},
      </if>
      <if test="testType != null">
        test_type = #{testType,jdbcType=INTEGER},
      </if>
    </set>
    where test_id = #{testId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.damselfly.business.entity.Test">
    update business_test
    set test_name = #{testName,jdbcType=VARCHAR},
      input_date = #{inputDate,jdbcType=DATE},
      big_data = #{bigData,jdbcType=VARCHAR},
      test_type = #{testType,jdbcType=INTEGER}
    where test_id = #{testId,jdbcType=INTEGER}
  </update>
</mapper>